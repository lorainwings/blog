(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{240:function(t,a,s){"use strict";s.r(a);var e=s(2),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git-常用技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-常用技巧"}},[t._v("#")]),t._v(" Git 常用技巧")]),t._v(" "),s("p",[t._v("Git 中有很多冷知识, 本文将记录一部分很实用的小技巧")]),t._v(" "),s("h2",{attrs:{id:"和-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和-的区别"}},[t._v("#")]),t._v(" "),s("code",[t._v("~")]),t._v(" 和 "),s("code",[t._v("^")]),t._v(" 的区别")]),t._v(" "),s("p",[t._v("该部分的内容, 笔者将分为以下几个部分:")]),t._v(" "),s("ul",[s("li",[t._v("Git Commit Log")]),t._v(" "),s("li",[t._v("HEAD^[num]")]),t._v(" "),s("li",[t._v("HEAD~[num]")]),t._v(" "),s("li",[t._v("HEAD^^")]),t._v(" "),s("li",[t._v("HEAD~~")])]),t._v(" "),s("h3",{attrs:{id:"git-commit-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-log"}},[t._v("#")]),t._v(" Git Commit Log")]),t._v(" "),s("p",[s("img",{attrs:{src:"/blog/skills/images/git-head.png",alt:"avatr"}})]),t._v(" "),s("p",[t._v("每条线上的雪花点右侧对应的 commitid,都属于该条线,开始和结尾的公共点共同拥有, 可以使用"),s("code",[t._v("--decorate")]),t._v("和"),s("code",[t._v("--graph")]),t._v("等参数简化 git 提交历史图")]),t._v(" "),s("pre",[s("code",[t._v("git log --graph --decorate\n")])]),t._v(" "),s("p",[t._v("上图第一条线拥有 "),s("code",[t._v("165f5a1->3cb9272->de87e10->b6de943")]),t._v("这几条提交记录:")]),t._v(" "),s("h3",{attrs:{id:"head-num"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#head-num"}},[t._v("#")]),t._v(" HEAD^[num]")]),t._v(" "),s("p",[t._v("用于选择第几条为主线,例如使用:")]),t._v(" "),s("pre",[s("code",[t._v("git reset --hard HEAD^2\n")])]),t._v(" "),s("p",[t._v("这个将从左往右选取第二条为主线,且回退一个版本,commit-id 将为:")]),t._v(" "),s("pre",[s("code",[t._v("ae3d768->02c1b1b->b6de943\n")])]),t._v(" "),s("h3",{attrs:{id:"head-num-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#head-num-2"}},[t._v("#")]),t._v(" HEAD~[num]")]),t._v(" "),s("p",[t._v("用于在当前主线『默认 master』,回退版本,例如使用:")]),t._v(" "),s("pre",[s("code",[t._v("git reset --hard HEAD~1\n")])]),t._v(" "),s("p",[t._v("这个将选取当前 master 主线,且回退一个版本,commit-id 将为:")]),t._v(" "),s("pre",[s("code",[t._v("3cb9272->de87e10->b6de943\n")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"head"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#head"}},[t._v("#")]),t._v(" HEAD^^")]),t._v(" "),s("p",[t._v("这种使用方式 HEAD 后面可以跟多个^,每个表示回退一个版本,效果同 HEAD~[num]")]),t._v(" "),s("pre",[s("code",[t._v("git reset --hard HEAD^^\n")])]),t._v(" "),s("p",[t._v("这个将选取第一条主线,且回退两个版本,commit-id 将为:")]),t._v(" "),s("pre",[s("code",[t._v("de87e10->b6de943\n")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"head-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#head-2"}},[t._v("#")]),t._v(" HEAD~~")]),t._v(" "),s("p",[t._v("这种使用方式 HEAD 后面可以跟多个~,每个表示回退一个版本,效果同 HEAD~[num]")]),t._v(" "),s("pre",[s("code",[t._v("git reset --hard HEAD~~\n")])]),t._v(" "),s("p",[t._v("这个将选取第一条主线,且回退两个版本,commit-id 将为:")]),t._v(" "),s("pre",[s("code",[t._v("de87e10->b6de943\n")])]),t._v(" "),s("h2",{attrs:{id:"代码统计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码统计"}},[t._v("#")]),t._v(" 代码统计")]),t._v(" "),s("p",[t._v("如果想了解多人团队中同事或者自己的代码统计情况, "),s("code",[t._v("git")]),t._v("提供了相关的命令, 方便且直观")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看团队每个人的代码提交量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" shortlog -s -n\n")])])]),s("h2",{attrs:{id:"rebase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rebase"}},[t._v("#")]),t._v(" Rebase")]),t._v(" "),s("p",[t._v("笔者总结了"),s("code",[t._v("rebase")]),t._v("的最常用三种用法(注意区间前开后闭):")]),t._v(" "),s("ul",[s("li",[t._v("合并多个 commit 为一个 commit")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 区间前开后闭")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase -i  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("start-commit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("end-commit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("ul",[s("li",[t._v("复制某个分支的一段 commit 进入当前分支")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 被复制的分支上执行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("new-branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("end-commit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase --onto  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("target-branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("start-commit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("^\n")])])]),s("ul",[s("li",[t._v("合并远端分支")])]),t._v(" "),s("p",[t._v("拉取远端代码的具体分支时,让当前合并历史更加好看,可以使用:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull --rebase origin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("target-branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h2",{attrs:{id:"删除本地无效的分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除本地无效的分支"}},[t._v("#")]),t._v(" 删除本地无效的分支")]),t._v(" "),s("p",[t._v("远端有很多分支已经被删除, 而本地仍然存在, 删除本地的无效的分支可以使用"),s("code",[t._v("prune")]),t._v("命令")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出已经失效的引用分支")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote prune show  origin\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除失效的分支")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote prune origin\n")])])]),s("h2",{attrs:{id:"恢复被删除的-stash-代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#恢复被删除的-stash-代码"}},[t._v("#")]),t._v(" 恢复被删除的 stash 代码")]),t._v(" "),s("p",[t._v("有时候不小心清空了"),s("code",[t._v("stash list")]),t._v("中的备用代码, 想找回来怎么办? 可以使用以下命令:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 撤销git stash clear的操作")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fsck")]),t._v(" --unreachable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cut")]),t._v(" -d "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" -f3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("xargs")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --merges --no-walk --grep"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("WIP\n")])])]),s("h2",{attrs:{id:"git-reset-的三个选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-的三个选项"}},[t._v("#")]),t._v(" Git Reset 的三个选项")]),t._v(" "),s("ul",[s("li",[t._v("mixed(默认值)")])]),t._v(" "),s("p",[t._v("回退一个版本,且会将暂存区的内容和本地已提交的内容全部恢复到未暂存的状态,不影响原来本地文件及未提交的本地修改")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-–mixed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" HEAD~1\n")])])]),s("ul",[s("li",[t._v("soft")])]),t._v(" "),s("p",[t._v("回退一个版本,不清空暂存区,将已提交的内容恢复到暂存区,不影响原来本地的文件(未提交的也不受影响)")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset -–soft HEAD~1\n")])])]),s("ul",[s("li",[t._v("hard")])]),t._v(" "),s("p",[t._v("回退一个版本,清空暂存区,将已提交的内容的版本恢复到本地,本地的文件也将被恢复的版本替换")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset -–hard HEAD~1\n")])])]),s("h2",{attrs:{id:"git-恢复误删的分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-恢复误删的分支"}},[t._v("#")]),t._v(" Git 恢复误删的分支")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("使用 git log -g 找回之前提交的 commit_id")])]),t._v(" "),s("li",[s("p",[t._v("使用 git branch recover_branch[新分支] commit_id 命令用这个 commit 创建一个分支")])]),t._v(" "),s("li",[s("p",[t._v("切换到 recover_branch_abc 分支，检查文件是否存在")])])]),t._v(" "),s("h2",{attrs:{id:"未完待续"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#未完待续"}},[t._v("#")]),t._v(" 未完待续")])])}),[],!1,null,null,null);a.default=r.exports}}]);