(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{402:function(t,a,s){"use strict";s.r(a);var e=s(27),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git-常用技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-常用技巧"}},[t._v("#")]),t._v(" Git 常用技巧")]),t._v(" "),s("p",[t._v("Git 中有很多冷知识, 本文将记录一部分很实用的小技巧")]),t._v(" "),s("h2",{attrs:{id:"和-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和-的区别"}},[t._v("#")]),t._v(" "),s("code",[t._v("~")]),t._v(" 和 "),s("code",[t._v("^")]),t._v(" 的区别")]),t._v(" "),s("p",[t._v("该部分的内容, 笔者将分为以下几个部分:")]),t._v(" "),s("ul",[s("li",[t._v("Git Commit Log")]),t._v(" "),s("li",[t._v("HEAD^[num]")]),t._v(" "),s("li",[t._v("HEAD~[num]")]),t._v(" "),s("li",[t._v("HEAD^^")]),t._v(" "),s("li",[t._v("HEAD~~")])]),t._v(" "),s("h3",{attrs:{id:"git-commit-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-log"}},[t._v("#")]),t._v(" Git Commit Log")]),t._v(" "),s("p",[s("img",{attrs:{src:"/blog/skills/images/git-head.png",alt:"avatr"}})]),t._v(" "),s("p",[t._v("每条线上的雪花点右侧对应的 commitid,都属于该条线,开始和结尾的公共点共同拥有, 可以使用"),s("code",[t._v("--decorate")]),t._v("和"),s("code",[t._v("--graph")]),t._v("等参数简化 git 提交历史图")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git log --graph --decorate\n")])])]),s("p",[t._v("上图第一条线拥有 "),s("code",[t._v("165f5a1->3cb9272->de87e10->b6de943")]),t._v("这几条提交记录:")]),t._v(" "),s("h3",{attrs:{id:"head-num"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#head-num"}},[t._v("#")]),t._v(" HEAD^[num]")]),t._v(" "),s("p",[t._v("用于选择第几条为主线,例如使用:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git reset --hard HEAD^2\n")])])]),s("p",[t._v("这个将从左往右选取第二条为主线,且回退一个版本,commit-id 将为:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("ae3d768->02c1b1b->b6de943\n")])])]),s("h3",{attrs:{id:"head-num-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#head-num-2"}},[t._v("#")]),t._v(" HEAD~[num]")]),t._v(" "),s("p",[t._v("用于在当前主线『默认 master』,回退版本,例如使用:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git reset --hard HEAD~1\n")])])]),s("p",[t._v("这个将选取当前 master 主线,且回退一个版本,commit-id 将为:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("3cb9272->de87e10->b6de943\n")])])]),s("hr"),t._v(" "),s("h3",{attrs:{id:"head"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#head"}},[t._v("#")]),t._v(" HEAD^^")]),t._v(" "),s("p",[t._v("这种使用方式 HEAD 后面可以跟多个^,每个表示回退一个版本,效果同 HEAD~[num]")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git reset --hard HEAD^^\n")])])]),s("p",[t._v("这个将选取第一条主线,且回退两个版本,commit-id 将为:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("de87e10->b6de943\n")])])]),s("hr"),t._v(" "),s("h3",{attrs:{id:"head-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#head-2"}},[t._v("#")]),t._v(" HEAD~~")]),t._v(" "),s("p",[t._v("这种使用方式 HEAD 后面可以跟多个~,每个表示回退一个版本,效果同 HEAD~[num]")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git reset --hard HEAD~~\n")])])]),s("p",[t._v("这个将选取第一条主线,且回退两个版本,commit-id 将为:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("de87e10->b6de943\n")])])]),s("h2",{attrs:{id:"代码统计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码统计"}},[t._v("#")]),t._v(" 代码统计")]),t._v(" "),s("p",[t._v("如果想了解多人团队中同事或者自己的代码统计情况, "),s("code",[t._v("git")]),t._v("提供了相关的命令, 方便且直观")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看团队每个人的代码提交量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" shortlog -s -n\n")])])]),s("h2",{attrs:{id:"rebase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rebase"}},[t._v("#")]),t._v(" Rebase")]),t._v(" "),s("p",[t._v("笔者总结了"),s("code",[t._v("rebase")]),t._v("的最常用三种用法(注意区间前开后闭):")]),t._v(" "),s("ul",[s("li",[t._v("合并多个 commit 为一个 commit")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 区间前开后闭")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase -i  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("start-commit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("end-commit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("ul",[s("li",[t._v("复制某个分支的一段 commit 进入当前分支")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("语法:")]),t._v(" "),s("p",[t._v("// base 分支名称\n// from 待合并片段的起始 commitId（不包含）\n// to 待合并片段的结束 commitId（包含）\ngit rebase --onto base from to")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 被复制的分支上执行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("new-branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("end-commit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase --onto  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("target-branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("start-commit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("^\n")])])]),s("ul",[s("li",[t._v("合并远端分支")])]),t._v(" "),s("p",[t._v("拉取远端代码的具体分支时,让当前合并历史更加好看,可以使用:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull --rebase origin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("target-branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h2",{attrs:{id:"删除本地无效的分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除本地无效的分支"}},[t._v("#")]),t._v(" 删除本地无效的分支")]),t._v(" "),s("p",[t._v("远端有很多分支已经被删除, 而本地仍然存在, 删除本地的无效的分支可以使用"),s("code",[t._v("prune")]),t._v("命令")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出已经失效的引用分支")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote prune show  origin\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除失效的分支")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote prune origin\n")])])]),s("h2",{attrs:{id:"恢复被删除的-stash-代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#恢复被删除的-stash-代码"}},[t._v("#")]),t._v(" 恢复被删除的 stash 代码")]),t._v(" "),s("p",[t._v("有时候不小心清空了"),s("code",[t._v("stash list")]),t._v("中的备用代码, 想找回来怎么办? 可以使用以下命令:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 撤销git stash clear的操作")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fsck")]),t._v(" --unreachable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cut")]),t._v(" -d "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" -f3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("xargs")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --merges --no-walk --grep"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("WIP\n")])])]),s("h2",{attrs:{id:"git-reset-的三个选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-的三个选项"}},[t._v("#")]),t._v(" Git Reset 的三个选项")]),t._v(" "),s("ul",[s("li",[t._v("mixed(默认值)")])]),t._v(" "),s("p",[t._v("回退一个版本,且会将暂存区的内容和本地已提交的内容全部恢复到未暂存的状态,不影响原来本地文件及未提交的本地修改")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-–mixed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" HEAD~1\n")])])]),s("ul",[s("li",[t._v("soft")])]),t._v(" "),s("p",[t._v("回退一个版本,不清空暂存区,将已提交的内容恢复到暂存区,不影响原来本地的文件(未提交的也不受影响)")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset -–soft HEAD~1\n")])])]),s("ul",[s("li",[t._v("hard")])]),t._v(" "),s("p",[t._v("回退一个版本,清空暂存区,将已提交的内容的版本恢复到本地,本地的文件也将被恢复的版本替换")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset -–hard HEAD~1\n")])])]),s("h2",{attrs:{id:"git-恢复误删的分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-恢复误删的分支"}},[t._v("#")]),t._v(" Git 恢复误删的分支")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("使用 git log -g 找回之前提交的 commit_id")])]),t._v(" "),s("li",[s("p",[t._v("使用 git branch recover_branch[新分支] commit_id 命令用这个 commit 创建一个分支")])]),t._v(" "),s("li",[s("p",[t._v("切换到 recover_branch_abc 分支，检查文件是否存在")])])]),t._v(" "),s("h2",{attrs:{id:"回滚本地分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回滚本地分支"}},[t._v("#")]),t._v(" 回滚本地分支")]),t._v(" "),s("h3",{attrs:{id:"git-reset-mixed-commit-id"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-mixed-commit-id"}},[t._v("#")]),t._v(" git reset (--mixed) [commit id]")]),t._v(" "),s("p",[t._v("回退到指定版本,且会将暂存区的内容和本地已提交的内容全部恢复到未暂存的状态,不影响原来本地文件(未提交的也不受影响)\n该参数"),s("code",[t._v("--mixed")]),t._v("是"),s("code",[t._v("git reset")]),t._v("的默认参数\n例如需要回退一个版本, 执行下面命令:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("// 回退一个版本\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD~1\n")])])]),s("p",[t._v("需要回退到某个 commitid("),s("code",[t._v("提交id通过git log查看")]),t._v("), 如需要回滚到"),s("code",[t._v("4a50c9f")]),t._v(",则执行")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset 4a50c9f\n")])])]),s("h3",{attrs:{id:"git-reset-soft-commit-id"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-soft-commit-id"}},[t._v("#")]),t._v(" git reset --soft [commit id]")]),t._v(" "),s("p",[t._v("回退到指定版本,不清空暂存区,将已提交的内容恢复到暂存区,不影响原来本地的文件(未提交的也不受影响)")]),t._v(" "),s("h3",{attrs:{id:"git-reset-hard-commit-id"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-hard-commit-id"}},[t._v("#")]),t._v(" git reset --hard [commit id]")]),t._v(" "),s("p",[t._v("回退到指定版本,清空暂存区,将已提交的内容的版本恢复到本地,本地的文件也将被恢复的版本替换")]),t._v(" "),s("h3",{attrs:{id:"git-revert-commit-id"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-revert-commit-id"}},[t._v("#")]),t._v(" git revert [commit id]")]),t._v(" "),s("p",[t._v("生成一个新的 commit，将指定的 commit 内容从当前分支上撤除")]),t._v(" "),s("h3",{attrs:{id:"git-revert-m-parent-id-commit-id"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-revert-m-parent-id-commit-id"}},[t._v("#")]),t._v(" git revert -m [parent Id][commit id]")]),t._v(" "),s("p",[t._v("当需要 revert 回滚两个分支合并后的一个公共提交, 此时需要加上"),s("code",[t._v("-m")]),t._v("选项来确认是第几个父 id("),s("code",[t._v("也就是确认回滚哪一条分支")]),t._v("); 可以通过"),s("code",[t._v("git show [提交id]")]),t._v(" 来查看有几个父 id")]),t._v(" "),s("p",[t._v("例子: 回滚到 cad132423 这个公共提交的第一个父节点\n"),s("code",[t._v("git revert -m 1 cad132423")])]),t._v(" "),s("h2",{attrs:{id:"回滚远端分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回滚远端分支"}},[t._v("#")]),t._v(" 回滚远端分支")]),t._v(" "),s("p",[t._v("案例: 需要回滚 master 上面的代码到 4a50c9f")]),t._v(" "),s("h3",{attrs:{id:"第一种方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一种方法"}},[t._v("#")]),t._v(" 第一种方法")]),t._v(" "),s("p",[t._v("以下是步骤:")]),t._v(" "),s("ul",[s("li",[t._v("先回滚到需要移除的 comitid 的前一次正确 commitid")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b remote-v1 4a50c9f\n")])])]),s("ul",[s("li",[t._v("合并策略为强行保留现在的分支(假合并)\n合并中完全采用 remote-v1 的代码")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge -s ours master\n")])])]),s("ul",[s("li",[t._v("推送到远程分支")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("// 也可以使用 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin HEAD:master\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin remote-v1:master\n")])])]),s("h3",{attrs:{id:"第二种方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二种方法"}},[t._v("#")]),t._v(" 第二种方法")]),t._v(" "),s("p",[t._v("以下是步骤:")]),t._v(" "),s("ul",[s("li",[t._v("先移除有代码错误的 comitid, 撤销一连串的 id 用"),s("code",[t._v("commidId..commitId")]),t._v(", 参数"),s("code",[t._v("--no-commit")]),t._v("是用于后面手动提交")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert --no-commit f7742cd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("551c408\n")])])]),s("ul",[s("li",[t._v("正常提交代码")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -a -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This reverts commit 7e345c9 and 551c408'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin HEAD:master\n")])])]),s("h3",{attrs:{id:"第三种方法-极不推荐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三种方法-极不推荐"}},[t._v("#")]),t._v(" 第三种方法[极不推荐]")]),t._v(" "),s("p",[t._v("该方法会强行覆盖远端分支的代码, 稍微不慎, 会导致其他人的代码丢失")]),t._v(" "),s("p",[t._v("以下是步骤:")]),t._v(" "),s("ul",[s("li",[t._v("使用文章开头的方式回滚本地分支")]),t._v(" "),s("li",[t._v("强行提交到远端分支")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master -f\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 未完待续")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);