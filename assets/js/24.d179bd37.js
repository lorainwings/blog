(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{406:function(a,t,s){"use strict";s.r(t);var e=s(27),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"git-常用技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-常用技巧"}},[a._v("#")]),a._v(" Git 常用技巧")]),a._v(" "),s("p",[a._v("Git 中有很多冷知识, 本文将记录一部分很实用的小技巧")]),a._v(" "),s("h2",{attrs:{id:"和-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和-的区别"}},[a._v("#")]),a._v(" "),s("code",[a._v("~")]),a._v(" 和 "),s("code",[a._v("^")]),a._v(" 的区别")]),a._v(" "),s("p",[a._v("该部分的内容, 笔者将分为以下几个部分:")]),a._v(" "),s("ul",[s("li",[a._v("Git Commit Log")]),a._v(" "),s("li",[a._v("HEAD^[num]")]),a._v(" "),s("li",[a._v("HEAD~[num]")]),a._v(" "),s("li",[a._v("HEAD^^")]),a._v(" "),s("li",[a._v("HEAD~~")])]),a._v(" "),s("h3",{attrs:{id:"git-commit-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-log"}},[a._v("#")]),a._v(" Git Commit Log")]),a._v(" "),s("p",[s("img",{attrs:{src:"/blog/skills/images/git-head.png",alt:"avatr"}})]),a._v(" "),s("p",[a._v("每条线上的雪花点右侧对应的 commitid,都属于该条线,开始和结尾的公共点共同拥有, 可以使用"),s("code",[a._v("--decorate")]),a._v("和"),s("code",[a._v("--graph")]),a._v("等参数简化 git 提交历史图")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git log --graph --decorate\n")])])]),s("p",[a._v("上图第一条线拥有 "),s("code",[a._v("165f5a1->3cb9272->de87e10->b6de943")]),a._v("这几条提交记录:")]),a._v(" "),s("h3",{attrs:{id:"head-num"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#head-num"}},[a._v("#")]),a._v(" HEAD^[num]")]),a._v(" "),s("p",[a._v("用于选择第几条为主线,例如使用:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git reset --hard HEAD^2\n")])])]),s("p",[a._v("这个将从左往右选取第二条为主线,且回退一个版本,commit-id 将为:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("ae3d768->02c1b1b->b6de943\n")])])]),s("h3",{attrs:{id:"head-num-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#head-num-2"}},[a._v("#")]),a._v(" HEAD~[num]")]),a._v(" "),s("p",[a._v("用于在当前主线『默认 master』,回退版本,例如使用:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git reset --hard HEAD~1\n")])])]),s("p",[a._v("这个将选取当前 master 主线,且回退一个版本,commit-id 将为:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("3cb9272->de87e10->b6de943\n")])])]),s("hr"),a._v(" "),s("h3",{attrs:{id:"head"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#head"}},[a._v("#")]),a._v(" HEAD^^")]),a._v(" "),s("p",[a._v("这种使用方式 HEAD 后面可以跟多个^,每个表示回退一个版本,效果同 HEAD~[num]")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git reset --hard HEAD^^\n")])])]),s("p",[a._v("这个将选取第一条主线,且回退两个版本,commit-id 将为:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("de87e10->b6de943\n")])])]),s("hr"),a._v(" "),s("h3",{attrs:{id:"head-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#head-2"}},[a._v("#")]),a._v(" HEAD~~")]),a._v(" "),s("p",[a._v("这种使用方式 HEAD 后面可以跟多个~,每个表示回退一个版本,效果同 HEAD~[num]")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git reset --hard HEAD~~\n")])])]),s("p",[a._v("这个将选取第一条主线,且回退两个版本,commit-id 将为:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("de87e10->b6de943\n")])])]),s("h2",{attrs:{id:"代码统计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码统计"}},[a._v("#")]),a._v(" 代码统计")]),a._v(" "),s("p",[a._v("如果想了解多人团队中同事或者自己的代码统计情况, "),s("code",[a._v("git")]),a._v("提供了相关的命令, 方便且直观")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看团队每个人的代码提交量")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" shortlog -s -n\n")])])]),s("h2",{attrs:{id:"rebase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rebase"}},[a._v("#")]),a._v(" Rebase")]),a._v(" "),s("p",[a._v("笔者总结了"),s("code",[a._v("rebase")]),a._v("的最常用三种用法(注意区间前开后闭):")]),a._v(" "),s("ul",[s("li",[a._v("合并多个 commit 为一个 commit")])]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 区间前开后闭")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" rebase -i  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("start-commit"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("end-commit"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("ul",[s("li",[a._v("复制某个分支的一段 commit 进入当前分支")])]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 被复制的分支上执行")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -b  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("new-branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("end-commit"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" rebase --onto  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("target-branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("start-commit"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("^\n")])])]),s("ul",[s("li",[a._v("合并远端分支")])]),a._v(" "),s("p",[a._v("拉取远端代码的具体分支时,让当前合并历史更加好看,可以使用:")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull --rebase origin "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("target-branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("h2",{attrs:{id:"删除本地无效的分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除本地无效的分支"}},[a._v("#")]),a._v(" 删除本地无效的分支")]),a._v(" "),s("p",[a._v("远端有很多分支已经被删除, 而本地仍然存在, 删除本地的无效的分支可以使用"),s("code",[a._v("prune")]),a._v("命令")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 列出已经失效的引用分支")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote prune show  origin\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除失效的分支")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote prune origin\n")])])]),s("h2",{attrs:{id:"恢复被删除的-stash-代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#恢复被删除的-stash-代码"}},[a._v("#")]),a._v(" 恢复被删除的 stash 代码")]),a._v(" "),s("p",[a._v("有时候不小心清空了"),s("code",[a._v("stash list")]),a._v("中的备用代码, 想找回来怎么办? 可以使用以下命令:")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 撤销git stash clear的操作")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("fsck")]),a._v(" --unreachable "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cut")]),a._v(" -d "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("' '")]),a._v(" -f3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("xargs")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log --merges --no-walk --grep"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("WIP\n")])])]),s("h2",{attrs:{id:"git-reset-的三个选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-的三个选项"}},[a._v("#")]),a._v(" Git Reset 的三个选项")]),a._v(" "),s("ul",[s("li",[a._v("mixed(默认值)")])]),a._v(" "),s("p",[a._v("回退一个版本,且会将暂存区的内容和本地已提交的内容全部恢复到未暂存的状态,不影响原来本地文件及未提交的本地修改")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("-–mixed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" HEAD~1\n")])])]),s("ul",[s("li",[a._v("soft")])]),a._v(" "),s("p",[a._v("回退一个版本,不清空暂存区,将已提交的内容恢复到暂存区,不影响原来本地的文件(未提交的也不受影响)")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset -–soft HEAD~1\n")])])]),s("ul",[s("li",[a._v("hard")])]),a._v(" "),s("p",[a._v("回退一个版本,清空暂存区,将已提交的内容的版本恢复到本地,本地的文件也将被恢复的版本替换")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset -–hard HEAD~1\n")])])]),s("h2",{attrs:{id:"git-恢复误删的分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-恢复误删的分支"}},[a._v("#")]),a._v(" Git 恢复误删的分支")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("使用 git log -g 找回之前提交的 commit_id")])]),a._v(" "),s("li",[s("p",[a._v("使用 git branch recover_branch[新分支] commit_id 命令用这个 commit 创建一个分支")])]),a._v(" "),s("li",[s("p",[a._v("切换到 recover_branch_abc 分支，检查文件是否存在")])])]),a._v(" "),s("h2",{attrs:{id:"未完待续"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#未完待续"}},[a._v("#")]),a._v(" 未完待续")])])}),[],!1,null,null,null);t.default=r.exports}}]);